# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InputNumbers(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, input_numbers: List[int]=None):  # noqa: E501
        """InputNumbers - a model defined in Swagger

        :param input_numbers: The input_numbers of this InputNumbers.  # noqa: E501
        :type input_numbers: List[int]
        """
        self.swagger_types = {
            'input_numbers': List[int]
        }

        self.attribute_map = {
            'input_numbers': 'input_numbers'
        }
        self._input_numbers = input_numbers

    @classmethod
    def from_dict(cls, dikt) -> 'InputNumbers':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InputNumbers of this InputNumbers.  # noqa: E501
        :rtype: InputNumbers
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_numbers(self) -> List[int]:
        """Gets the input_numbers of this InputNumbers.


        :return: The input_numbers of this InputNumbers.
        :rtype: List[int]
        """
        return self._input_numbers

    @input_numbers.setter
    def input_numbers(self, input_numbers: List[int]):
        """Sets the input_numbers of this InputNumbers.


        :param input_numbers: The input_numbers of this InputNumbers.
        :type input_numbers: List[int]
        """
        if input_numbers is None:
            raise ValueError("Invalid value for `input_numbers`, must not be `None`")  # noqa: E501

        self._input_numbers = input_numbers
